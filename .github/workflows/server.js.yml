name: CI/CD for server

on:
  push:
    branches: [ "main" ]
    paths:
      - 'server/**'

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [19.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Create .env.production
      run: |
        touch .env.production
        echo "NEXT_PUBLIC_API_ENDPOINT=${{ secrets.NEXT_PUBLIC_API_ENDPOINT }}" >> .env.production
        echo "PORT=${{ secrets.PORT }}" >> .env.production
        echo "DOMAIN=${{ secrets.DOMAIN }}" >> .env.production
        echo "PROTOCOL=${{ secrets.PROTOCOL }}" >> .env.production
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env.production
        echo "SESSION_TOKEN_SECRET=${{ secrets.SESSION_TOKEN_SECRET }}" >> .env.production
        echo "SESSION_TOKEN_EXPIRES_IN=${{ secrets.SESSION_TOKEN_EXPIRES_IN }}" >> .env.production
        echo "COOKIE_MODE=${{ secrets.COOKIE_MODE }}" >> .env.production
        echo "UPLOAD_FOLDER=${{ secrets.UPLOAD_FOLDER }}" >> .env.production
      working-directory: ./server

    - name: Print contents of .env.production file
      run: cd server && cat .env.production
    - run: cd server && npm ci
    - run: cd server && npm run build --if-present

    - name: Deploy using ssh
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD_ANHVD }}
        # key: ${{ secrets.PRIVATE_KEY }}
        port: 22
        script: |
          cd /home/anhvd/next-js-14-demo
          git pull origin main
          git status
          cd server
          npm install
          npm run build
          pm2 restart server

    # - name: Change Directory
    #   run: cd /home/anhvd/actions-runner/_work/next-js-14-demo/next-js-14-demo/server
    # - run: pm2 reload 1

